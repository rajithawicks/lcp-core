PROCEDURE "CREATE_EVENT_RULE_CONDITION"( 
	IN	IV_RULECONDITIONUUID nvarchar(32),
	IN  IV_CONDITIONFROM decimal(15,2),
	IN  IV_CONDITIONTO decimal(15,2),
	IN	IV_VALUE nvarchar(20),
	OUT EV_EVENTRULECONDITIONUUID nvarchar(32),
	OUT ET_RETURN "TT_RETURN_MESSAGE"	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA AS
   AS   
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
	DECLARE vEventRuleConditionId nvarchar(10);
   
	-- validation for event rule condition
	CALL "VALIDATE_EVENT_RULE_CONDITION"(
		IV_ACTIVITYTYPE => 'CREATE',
		IV_EVENTRULECONDITIONUUID => '',		
		IV_RULECONDITIONUUID => :IV_RULECONDITIONUUID, 
		IV_CONDITIONFROM => :IV_CONDITIONFROM,
		IV_CONDITIONTO => :IV_CONDITIONTO,
		ET_RETURN => :ET_RETURN
	); 

	if ( RECORD_COUNT(:ET_RETURN) < 1 ) then
	    -- new UUID
		EXEC 'SELECT "EVENTRULECONDITIONSEQID".NEXTVAL FROM DUMMY' INTO vEventRuleConditionId;
		EV_EVENTRULECONDITIONUUID = :vEventRuleConditionId;
		
		-- insert new Event Rule Condition data
	    INSERT INTO "PR_EVENTRULECONDITION" (
			"EVENTRULECONDITIONUUID", "RULECONDITIONUUID", "CONDITIONFROM", "CONDITIONTO", "VALUE")
		VALUES (
			:vEventRuleConditionId, :IV_RULECONDITIONUUID, :IV_CONDITIONFROM, :IV_CONDITIONTO, :IV_VALUE
		);
		COMMIT;
	end if;
	
END