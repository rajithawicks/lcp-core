PROCEDURE "DELETE_ACCESS_SEQUENCE"( 
	IN	IV_ACCESSSEQUENCEUUID nvarchar(32),
	OUT ET_RETURN "TT_RETURN_MESSAGE"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   USING "UTILITY" AS util;
   USING "MESSAGEUTILITY" AS message; 
   USING "C_MESSAGE_TYPE" AS messageType;
   
   DECLARE doExist boolean = true;
   DECLARE sMessage string;
   DECLARE tCheckCriteria TABLE (
   					COLUMN_VALUE nvarchar(50),
   					COLUMN_NAME nvarchar(50)
   				);
   DECLARE ls_access_sequence ROW LIKE "PR_ACCESSSEQUENCE";
   
    SELECT * INTO ls_access_sequence
    FROM "PR_ACCESSSEQUENCE"
    WHERE ACCESSSEQUENCEUUID = :IV_ACCESSSEQUENCEUUID;
   
   -- Existence check - Access Sequence
   :tCheckCriteria.INSERT((:IV_ACCESSSEQUENCEUUID,'ACCESSSEQUENCEUUID'), 1);
   CALL util:"check_data_exists"('PR_ACCESSSEQUENCE',:tCheckCriteria,:doExist);
   IF (:doExist = false) THEN
      CALL message:"get_message"('', '', '001', :IV_ACCESSSEQUENCEUUID, '', '', '', :sMessage);
		:ET_RETURN.INSERT((messageType:error, :sMessage));
   ELSE
		DELETE FROM "PR_ACCESSSEQUENCE" WHERE ACCESSSEQUENCEUUID = :IV_ACCESSSEQUENCEUUID;
		COMMIT;
   END IF;
END