PROCEDURE "UPDATE_EVENT_RULE_CONDITION"( 
	IN	IV_EVENTRULECONDITIONUUID nvarchar(32),
	IN	IV_RULECONDITIONUUID nvarchar(32),
	IN  IV_CONDITIONFROM decimal(15,2),
	IN  IV_CONDITIONTO decimal(15,2),
	IN	IV_VALUE nvarchar(20),
	OUT ET_RETURN "TT_RETURN_MESSAGE"	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/

	-- validation for event rule condition
	CALL "VALIDATE_EVENT_RULE_CONDITION"(
		IV_ACTIVITYTYPE => 'UPDATE',
		IV_EVENTRULECONDITIONUUID => :IV_EVENTRULECONDITIONUUID,		
		IV_RULECONDITIONUUID => :IV_RULECONDITIONUUID, 
		IV_CONDITIONFROM => :IV_CONDITIONFROM,
		IV_CONDITIONTO => :IV_CONDITIONTO,
		ET_RETURN => :ET_RETURN	
	);
	
	if ( RECORD_COUNT(:ET_RETURN) < 1 ) then
    	UPDATE "PR_EVENTRULECONDITION"
			SET 
				"RULECONDITIONUUID" = :IV_RULECONDITIONUUID,
				"CONDITIONFROM" = :IV_CONDITIONFROM,
				"CONDITIONTO" = :IV_CONDITIONTO,
				"VALUE" = :IV_VALUE
			WHERE 
				"EVENTRULECONDITIONUUID" = :IV_EVENTRULECONDITIONUUID;
			COMMIT;
	end if;
	
END